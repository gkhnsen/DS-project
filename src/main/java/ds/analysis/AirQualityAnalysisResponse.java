// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: analysis.proto

package ds.analysis;

/**
 * Protobuf type {@code analysis.AirQualityAnalysisResponse}
 */
public  final class AirQualityAnalysisResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:analysis.AirQualityAnalysisResponse)
    AirQualityAnalysisResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AirQualityAnalysisResponse.newBuilder() to construct.
  private AirQualityAnalysisResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AirQualityAnalysisResponse() {
    airQualityData_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AirQualityAnalysisResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              airQualityData_ = new java.util.ArrayList<ds.analysis.AnalysisData>();
              mutable_bitField0_ |= 0x00000001;
            }
            airQualityData_.add(
                input.readMessage(ds.analysis.AnalysisData.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        airQualityData_ = java.util.Collections.unmodifiableList(airQualityData_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ds.analysis.AnalysisProto.internal_static_analysis_AirQualityAnalysisResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ds.analysis.AnalysisProto.internal_static_analysis_AirQualityAnalysisResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ds.analysis.AirQualityAnalysisResponse.class, ds.analysis.AirQualityAnalysisResponse.Builder.class);
  }

  public static final int AIR_QUALITY_DATA_FIELD_NUMBER = 1;
  private java.util.List<ds.analysis.AnalysisData> airQualityData_;
  /**
   * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
   */
  public java.util.List<ds.analysis.AnalysisData> getAirQualityDataList() {
    return airQualityData_;
  }
  /**
   * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
   */
  public java.util.List<? extends ds.analysis.AnalysisDataOrBuilder> 
      getAirQualityDataOrBuilderList() {
    return airQualityData_;
  }
  /**
   * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
   */
  public int getAirQualityDataCount() {
    return airQualityData_.size();
  }
  /**
   * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
   */
  public ds.analysis.AnalysisData getAirQualityData(int index) {
    return airQualityData_.get(index);
  }
  /**
   * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
   */
  public ds.analysis.AnalysisDataOrBuilder getAirQualityDataOrBuilder(
      int index) {
    return airQualityData_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < airQualityData_.size(); i++) {
      output.writeMessage(1, airQualityData_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < airQualityData_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, airQualityData_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ds.analysis.AirQualityAnalysisResponse)) {
      return super.equals(obj);
    }
    ds.analysis.AirQualityAnalysisResponse other = (ds.analysis.AirQualityAnalysisResponse) obj;

    boolean result = true;
    result = result && getAirQualityDataList()
        .equals(other.getAirQualityDataList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getAirQualityDataCount() > 0) {
      hash = (37 * hash) + AIR_QUALITY_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getAirQualityDataList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ds.analysis.AirQualityAnalysisResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.analysis.AirQualityAnalysisResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.analysis.AirQualityAnalysisResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.analysis.AirQualityAnalysisResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.analysis.AirQualityAnalysisResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.analysis.AirQualityAnalysisResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.analysis.AirQualityAnalysisResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ds.analysis.AirQualityAnalysisResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static ds.analysis.AirQualityAnalysisResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static ds.analysis.AirQualityAnalysisResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ds.analysis.AirQualityAnalysisResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ds.analysis.AirQualityAnalysisResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ds.analysis.AirQualityAnalysisResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code analysis.AirQualityAnalysisResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:analysis.AirQualityAnalysisResponse)
      ds.analysis.AirQualityAnalysisResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ds.analysis.AnalysisProto.internal_static_analysis_AirQualityAnalysisResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ds.analysis.AnalysisProto.internal_static_analysis_AirQualityAnalysisResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ds.analysis.AirQualityAnalysisResponse.class, ds.analysis.AirQualityAnalysisResponse.Builder.class);
    }

    // Construct using ds.analysis.AirQualityAnalysisResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAirQualityDataFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (airQualityDataBuilder_ == null) {
        airQualityData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        airQualityDataBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ds.analysis.AnalysisProto.internal_static_analysis_AirQualityAnalysisResponse_descriptor;
    }

    @java.lang.Override
    public ds.analysis.AirQualityAnalysisResponse getDefaultInstanceForType() {
      return ds.analysis.AirQualityAnalysisResponse.getDefaultInstance();
    }

    @java.lang.Override
    public ds.analysis.AirQualityAnalysisResponse build() {
      ds.analysis.AirQualityAnalysisResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ds.analysis.AirQualityAnalysisResponse buildPartial() {
      ds.analysis.AirQualityAnalysisResponse result = new ds.analysis.AirQualityAnalysisResponse(this);
      int from_bitField0_ = bitField0_;
      if (airQualityDataBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          airQualityData_ = java.util.Collections.unmodifiableList(airQualityData_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.airQualityData_ = airQualityData_;
      } else {
        result.airQualityData_ = airQualityDataBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ds.analysis.AirQualityAnalysisResponse) {
        return mergeFrom((ds.analysis.AirQualityAnalysisResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ds.analysis.AirQualityAnalysisResponse other) {
      if (other == ds.analysis.AirQualityAnalysisResponse.getDefaultInstance()) return this;
      if (airQualityDataBuilder_ == null) {
        if (!other.airQualityData_.isEmpty()) {
          if (airQualityData_.isEmpty()) {
            airQualityData_ = other.airQualityData_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAirQualityDataIsMutable();
            airQualityData_.addAll(other.airQualityData_);
          }
          onChanged();
        }
      } else {
        if (!other.airQualityData_.isEmpty()) {
          if (airQualityDataBuilder_.isEmpty()) {
            airQualityDataBuilder_.dispose();
            airQualityDataBuilder_ = null;
            airQualityData_ = other.airQualityData_;
            bitField0_ = (bitField0_ & ~0x00000001);
            airQualityDataBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAirQualityDataFieldBuilder() : null;
          } else {
            airQualityDataBuilder_.addAllMessages(other.airQualityData_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      ds.analysis.AirQualityAnalysisResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (ds.analysis.AirQualityAnalysisResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<ds.analysis.AnalysisData> airQualityData_ =
      java.util.Collections.emptyList();
    private void ensureAirQualityDataIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        airQualityData_ = new java.util.ArrayList<ds.analysis.AnalysisData>(airQualityData_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        ds.analysis.AnalysisData, ds.analysis.AnalysisData.Builder, ds.analysis.AnalysisDataOrBuilder> airQualityDataBuilder_;

    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public java.util.List<ds.analysis.AnalysisData> getAirQualityDataList() {
      if (airQualityDataBuilder_ == null) {
        return java.util.Collections.unmodifiableList(airQualityData_);
      } else {
        return airQualityDataBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public int getAirQualityDataCount() {
      if (airQualityDataBuilder_ == null) {
        return airQualityData_.size();
      } else {
        return airQualityDataBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public ds.analysis.AnalysisData getAirQualityData(int index) {
      if (airQualityDataBuilder_ == null) {
        return airQualityData_.get(index);
      } else {
        return airQualityDataBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public Builder setAirQualityData(
        int index, ds.analysis.AnalysisData value) {
      if (airQualityDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAirQualityDataIsMutable();
        airQualityData_.set(index, value);
        onChanged();
      } else {
        airQualityDataBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public Builder setAirQualityData(
        int index, ds.analysis.AnalysisData.Builder builderForValue) {
      if (airQualityDataBuilder_ == null) {
        ensureAirQualityDataIsMutable();
        airQualityData_.set(index, builderForValue.build());
        onChanged();
      } else {
        airQualityDataBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public Builder addAirQualityData(ds.analysis.AnalysisData value) {
      if (airQualityDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAirQualityDataIsMutable();
        airQualityData_.add(value);
        onChanged();
      } else {
        airQualityDataBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public Builder addAirQualityData(
        int index, ds.analysis.AnalysisData value) {
      if (airQualityDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAirQualityDataIsMutable();
        airQualityData_.add(index, value);
        onChanged();
      } else {
        airQualityDataBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public Builder addAirQualityData(
        ds.analysis.AnalysisData.Builder builderForValue) {
      if (airQualityDataBuilder_ == null) {
        ensureAirQualityDataIsMutable();
        airQualityData_.add(builderForValue.build());
        onChanged();
      } else {
        airQualityDataBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public Builder addAirQualityData(
        int index, ds.analysis.AnalysisData.Builder builderForValue) {
      if (airQualityDataBuilder_ == null) {
        ensureAirQualityDataIsMutable();
        airQualityData_.add(index, builderForValue.build());
        onChanged();
      } else {
        airQualityDataBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public Builder addAllAirQualityData(
        java.lang.Iterable<? extends ds.analysis.AnalysisData> values) {
      if (airQualityDataBuilder_ == null) {
        ensureAirQualityDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, airQualityData_);
        onChanged();
      } else {
        airQualityDataBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public Builder clearAirQualityData() {
      if (airQualityDataBuilder_ == null) {
        airQualityData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        airQualityDataBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public Builder removeAirQualityData(int index) {
      if (airQualityDataBuilder_ == null) {
        ensureAirQualityDataIsMutable();
        airQualityData_.remove(index);
        onChanged();
      } else {
        airQualityDataBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public ds.analysis.AnalysisData.Builder getAirQualityDataBuilder(
        int index) {
      return getAirQualityDataFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public ds.analysis.AnalysisDataOrBuilder getAirQualityDataOrBuilder(
        int index) {
      if (airQualityDataBuilder_ == null) {
        return airQualityData_.get(index);  } else {
        return airQualityDataBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public java.util.List<? extends ds.analysis.AnalysisDataOrBuilder> 
         getAirQualityDataOrBuilderList() {
      if (airQualityDataBuilder_ != null) {
        return airQualityDataBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(airQualityData_);
      }
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public ds.analysis.AnalysisData.Builder addAirQualityDataBuilder() {
      return getAirQualityDataFieldBuilder().addBuilder(
          ds.analysis.AnalysisData.getDefaultInstance());
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public ds.analysis.AnalysisData.Builder addAirQualityDataBuilder(
        int index) {
      return getAirQualityDataFieldBuilder().addBuilder(
          index, ds.analysis.AnalysisData.getDefaultInstance());
    }
    /**
     * <code>repeated .analysis.AnalysisData air_quality_data = 1;</code>
     */
    public java.util.List<ds.analysis.AnalysisData.Builder> 
         getAirQualityDataBuilderList() {
      return getAirQualityDataFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        ds.analysis.AnalysisData, ds.analysis.AnalysisData.Builder, ds.analysis.AnalysisDataOrBuilder> 
        getAirQualityDataFieldBuilder() {
      if (airQualityDataBuilder_ == null) {
        airQualityDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            ds.analysis.AnalysisData, ds.analysis.AnalysisData.Builder, ds.analysis.AnalysisDataOrBuilder>(
                airQualityData_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        airQualityData_ = null;
      }
      return airQualityDataBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:analysis.AirQualityAnalysisResponse)
  }

  // @@protoc_insertion_point(class_scope:analysis.AirQualityAnalysisResponse)
  private static final ds.analysis.AirQualityAnalysisResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ds.analysis.AirQualityAnalysisResponse();
  }

  public static ds.analysis.AirQualityAnalysisResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AirQualityAnalysisResponse>
      PARSER = new com.google.protobuf.AbstractParser<AirQualityAnalysisResponse>() {
    @java.lang.Override
    public AirQualityAnalysisResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AirQualityAnalysisResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AirQualityAnalysisResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AirQualityAnalysisResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ds.analysis.AirQualityAnalysisResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

